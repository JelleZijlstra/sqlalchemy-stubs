# Stubs for sqlalchemy.testing.fixtures (Python 3.6)
#
# NOTE: This dynamically typed stub was automatically generated by stubgen.

from typing import Any, Optional
import assertions
from .util import adict as adict
from .engines import drop_all_tables as drop_all_tables
from .entities import BasicEntity as BasicEntity, ComparableEntity as ComparableEntity

class TestBase:
    __whitelist__ = ...  # type: Any
    __requires__ = ...  # type: Any
    __unsupported_on__ = ...  # type: Any
    __only_on__ = ...  # type: Any
    __skip_if__ = ...  # type: Any
    def assert_(self, val, msg: Optional[Any] = ...): ...
    def setup(self): ...
    def teardown(self): ...

class TablesTest(TestBase):
    run_setup_bind = ...  # type: str
    run_define_tables = ...  # type: str
    run_create_tables = ...  # type: str
    run_inserts = ...  # type: str
    run_deletes = ...  # type: str
    run_dispose_bind = ...  # type: Any
    bind = ...  # type: Any
    metadata = ...  # type: Any
    tables = ...  # type: Any
    other = ...  # type: Any
    @classmethod
    def setup_class(cls): ...
    def setup(self): ...
    def teardown(self): ...
    @classmethod
    def teardown_class(cls): ...
    @classmethod
    def setup_bind(cls): ...
    @classmethod
    def dispose_bind(cls, bind): ...
    @classmethod
    def define_tables(cls, metadata): ...
    @classmethod
    def fixtures(cls): ...
    @classmethod
    def insert_data(cls): ...
    def sql_count_(self, count, fn): ...
    def sql_eq_(self, callable_, statements): ...

class RemovesEvents:
    def event_listen(self, target, name, fn): ...
    def teardown(self): ...

class _ORMTest:
    @classmethod
    def teardown_class(cls): ...

class ORMTest(_ORMTest, TestBase): ...

class MappedTest(_ORMTest, TablesTest, assertions.AssertsExecutionResults):
    run_setup_classes = ...  # type: str
    run_setup_mappers = ...  # type: str
    classes = ...  # type: Any
    @classmethod
    def setup_class(cls): ...
    @classmethod
    def teardown_class(cls): ...
    def setup(self): ...
    def teardown(self): ...
    @classmethod
    def setup_classes(cls): ...
    @classmethod
    def setup_mappers(cls): ...

class DeclarativeMappedTest(MappedTest):
    run_setup_classes = ...  # type: str
    run_setup_mappers = ...  # type: str
